---
- name: Copy CA config file
  copy:
    src: ../files/pki/
    dest: "{{ WORK_DIR }}"

- name: Create CA CSR file
  template:
    src: ../templates/csr.json.j2
    dest: "{{ WORK_DIR }}/ca-csr.json"
  vars:
    cn: "Kubernetes"
    org: "Kubernetes"

- name: Provision CA
  shell:
    cmd: cfssl gencert -initca ca-csr.json | cfssljson -bare ca
    chdir: "{{ WORK_DIR }}"

- name: Create hostnames string for kubernetes cert
  block:
    - name: Initialize variables
      set_fact:
        query: []
        k8s_hostnames: "kubernetes,kubernetes.default,kubernetes.default.svc,\
          kubernetes.default.svc.cluster,kubernetes.svc.cluster.local,\
          127.0.0.1,10.32.0.1"

    - name: Build JSON query for each worker's cluster IP
      set_fact:
        query: "{{ query + ['@.'+ item + '.cluster_ip'] }}"
      loop: "{{ groups['workers'] }}"

    - name: Append worker cluster IP to hostnames string
      set_fact:
        k8s_hostnames: "{{ k8s_hostnames + ',' + (hostvars | json_query(item)) }}"
      loop: "{{ query }}"

- include_tasks: pki-generate-cert.yaml
  loop:
  - {name: admin, cn: admin, org: "system:masters"}
  - {name: kube-controller-manager, cn: "system:kube-controller-manager", org: "system:kube-controller-manager"}
  - {name: kube-scheduler, cn: "system:kube-scheduler", org: "system:kube-scheduler"}
  - {name: kubernetes, cn: kubernetes, org: Kubernetes, hostname: "{{ k8s_hostnames }}"}
  - {name: service-account, cn: "service-account", org: "Kubernetes"}
