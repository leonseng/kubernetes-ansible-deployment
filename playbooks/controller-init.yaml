---
- hosts: controllers
  vars:
    tasks_dir: "../tasks"
    files_dir: "../files"
  tasks:
    - include_tasks: "{{ tasks_dir }}/pki-generate-cert.yaml"
      loop:
        - {name: admin, cn: admin, org: "system:masters"}
        - {name: kube-controller-manager, cn: "system:kube-controller-manager", org: "system:kube-controller-manager"}
        - {name: kube-scheduler, cn: "system:kube-scheduler", org: "system:kube-scheduler"}
        - {
            name: kubernetes, cn: kubernetes, org: "Kubernetes",
            hostname: "kubernetes,kubernetes.default,kubernetes.default.svc,\
              kubernetes.default.svc.cluster,kubernetes.svc.cluster.local,\
              127.0.0.1,10.32.0.1\
              {%- for n in groups['controllers'] %}\
              ,{{ hostvars[n]['cluster_ip'] }}\
              {% endfor -%}"
          }
        - {name: service-account, cn: "service-account", org: "Kubernetes"}

    - include_tasks: "{{ tasks_dir }}/kubeconfig-generate.yaml"
      loop:
        - {name: kube-controller-manager, kube_cfg_user: "system:kube-controller-manager"}
        - {name: kube-scheduler, kube_cfg_user: "system:kube-scheduler"}
        - {name: admin, kube_cfg_user: "admin"}

    - include_tasks: "{{ tasks_dir }}/encryption-generate.yaml"

    - name: Load config and service files into working directory
      block:
        - name: Load kube-scheduler files
          copy:
            src: "{{ files_dir }}/controller/{{ item }}"
            dest: "{{ WORK_DIR }}/"
          loop:
            - kube-scheduler.yaml
            - kube-scheduler.service

        - name: Create systemd unit for kube-apiserver
          template:
            src: "../templates/kube-apiserver.service.j2"
            dest: "{{ WORK_DIR }}/kube-apiserver.service"
          vars:
            apiserver_count: "{{ groups['controllers'] | length }}"
            service_cidr: "{{ SERVICE_CIDR }}"
            etcd_servers_string: "{{
              groups['controllers'] |
              map('extract', hostvars , 'cluster_ip') |
              map('regex_replace', '(.+)' , 'https://\\1:2379') |
              list |
              join(',')
            }}"

        - name: Create systemd unit for kube-controller-manager
          template:
            src: "../templates/kube-controller-manager.service.j2"
            dest: "{{ WORK_DIR }}/kube-controller-manager.service"
          vars:
            service_cidr: "{{ SERVICE_CIDR }}"
            cluster_cidr: "{{ CLUSTER_CIDR }}"

      delegate_to: localhost
