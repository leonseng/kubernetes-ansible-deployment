---
- hosts: controllers
  vars:
    tasks_dir: "../tasks"
    files_dir: "../files"
  tasks:
    - include_tasks: "{{ tasks_dir }}/etcd-install.yaml"

    - include_tasks: "{{ tasks_dir }}/kubectl-install.yaml"

    - name: Create Kubernetes directories
      file:
        name: "{{ item }}"
        state: directory
      loop:
        - /var/lib/kubernetes/
        - /etc/kubernetes/config/
      become: yes

    - name: Copy certs, kubeconfigs, service configs to controller
      copy:
        src: "{{ WORK_DIR }}/{{ item.file_name }}"
        dest: "{{ item.file_dest }}"
      loop:
        - {file_name: ca.pem, file_dest: /var/lib/kubernetes}
        - {file_name: ca-key.pem, file_dest: /var/lib/kubernetes}
        - {file_name: kubernetes-key.pem, file_dest: /var/lib/kubernetes}
        - {file_name: kubernetes.pem, file_dest: /var/lib/kubernetes}
        - {file_name: service-account-key.pem, file_dest: /var/lib/kubernetes}
        - {file_name: service-account.pem, file_dest: /var/lib/kubernetes}
        - {file_name: kube-controller-manager.kubeconfig, file_dest: /var/lib/kubernetes}
        - {file_name: kube-scheduler.kubeconfig, file_dest: /var/lib/kubernetes}
        - {file_name: kube-scheduler.yaml, file_dest: /etc/kubernetes/config}
        - {file_name: encryption-config.yaml, file_dest: /var/lib/kubernetes}
      become: yes

    - name: Setup controller services
      include_tasks: "{{ tasks_dir }}/controller-service-install.yaml"
      loop:
        - kube-apiserver
        - kube-scheduler
        - kube-controller-manager

    - name: Configure RBAC for Kubelet Authorization
      block:
        - set_fact:
            temp_dir: "/tmp"

        - name: Copy files to controller
          copy:
            src: "{{ WORK_DIR }}/admin.kubeconfig"
            dest: "~/"

        - name: Create ClusterRole manifest
          copy:
            content: |
              apiVersion: rbac.authorization.k8s.io/v1beta1
              kind: ClusterRole
              metadata:
                annotations:
                  rbac.authorization.kubernetes.io/autoupdate: "true"
                labels:
                  kubernetes.io/bootstrapping: rbac-defaults
                name: system:kube-apiserver-to-kubelet
              rules:
                - apiGroups:
                    - ""
                  resources:
                    - nodes/proxy
                    - nodes/stats
                    - nodes/log
                    - nodes/spec
                    - nodes/metrics
                  verbs:
                    - "*"
            dest: "{{ temp_dir }}/kube-apiserver-to-kubelet-cluster-role.yaml"

        - name: Create ClusterRoleBinding manifest
          copy:
            content: |
              apiVersion: rbac.authorization.k8s.io/v1beta1
              kind: ClusterRoleBinding
              metadata:
                name: system:kube-apiserver
                namespace: ""
              roleRef:
                apiGroup: rbac.authorization.k8s.io
                kind: ClusterRole
                name: system:kube-apiserver-to-kubelet
              subjects:
                - apiGroup: rbac.authorization.k8s.io
                  kind: User
                  name: kubernetes
            dest: "{{ temp_dir }}/kube-apiserver-cluster-role-binding.yaml"

        - name: Create ClusterRole to access the Kubelet API
          shell:
            cmd: kubectl apply --kubeconfig ~/admin.kubeconfig -f kube-apiserver-to-kubelet-cluster-role.yaml
            chdir: "{{ temp_dir }}"

        - name: Bind the ClusterRole to the kubernetes user
          shell:
            cmd: kubectl apply --kubeconfig ~/admin.kubeconfig -f kube-apiserver-cluster-role-binding.yaml
            chdir: "{{ temp_dir }}"

      run_once: true
