---
- block:
    - name: Create etcd directories
      file:
        name: "{{ item }}"
        state: directory
      loop:
        - /etc/etcd
        - /var/lib/etcd

    - name: Copy certs to etcd directory
      copy:
        src: "{{ WORK_DIR }}/{{ item }}"
        dest: "/etc/etcd/"
      loop:
        - ca.pem
        - kubernetes-key.pem
        - kubernetes.pem

    - name: Download etcd package
      uri:
        url: https://github.com/etcd-io/etcd/releases/download/v3.4.0/etcd-v3.4.0-linux-amd64.tar.gz
        dest: "{{ WORK_DIR }}/etcd-v3.4.0-linux-amd64.tar.gz"
        status_code: [200, 304]

    - name: Clean up past runs
      file:
        name: "{{ WORK_DIR }}/etcd-v3.4.0-linux-amd64"
        state: absent

    - name: Extract etcd package
      unarchive:
        src: "{{ WORK_DIR }}/etcd-v3.4.0-linux-amd64.tar.gz"
        dest: "{{ WORK_DIR }}/"
        remote_src: yes

    - name: Move etcd binary to executable path
      shell:
        cmd: mv etcd-v3.4.0-linux-amd64/etcd* /usr/local/bin/
        chdir: "{{ WORK_DIR }}"

    - name: Create etcd systemd unit
      template:
        src: "../templates/etcd.service.j2"
        dest: "/etc/systemd/system/etcd.service"
      vars:
        etcd_cluster_string: "\
          {% set members = [] %}
          {%- for c in groups['controllers'] -%}
          {{ members.append(c + '=https://' + hostvars[c]['cluster_ip'] + ':2380') }}
          {%- endfor -%}
          {{ members | join(',') }}
          "

    - name: Start etcd server
      systemd:
        name: etcd
        state: restarted
        enabled: yes
        daemon_reload: yes
  become: yes
