---
- hosts: directors
  connection: local
  tasks:
    - name: Configure kubectl for remote access
      shell:
        cmd: "kubectl config {{ item }}"
        chdir: "{{ WORK_DIR }}"
      loop:
        - "set-cluster kubernetes-the-hard-way
          --certificate-authority=ca.pem
          --embed-certs=true
          --server=https://{{ API_SERVER_IP }}:6443"
        - "set-credentials admin
          --client-certificate=admin.pem
          --client-key=admin-key.pem"
        - "set-context kubernetes-the-hard-way
          --cluster=kubernetes-the-hard-way
          --user=admin"
        - use-context kubernetes-the-hard-way


    - name: Configure RBAC for Kubelet Authorization
      block:
        - name: Create ClusterRole manifest
          copy:
            content: |
              apiVersion: rbac.authorization.k8s.io/v1beta1
              kind: ClusterRole
              metadata:
                annotations:
                  rbac.authorization.kubernetes.io/autoupdate: "true"
                labels:
                  kubernetes.io/bootstrapping: rbac-defaults
                name: system:kube-apiserver-to-kubelet
              rules:
                - apiGroups:
                    - ""
                  resources:
                    - nodes/proxy
                    - nodes/stats
                    - nodes/log
                    - nodes/spec
                    - nodes/metrics
                  verbs:
                    - "*"
            dest: "{{ WORK_DIR }}/kube-apiserver-to-kubelet-cluster-role.yaml"

        - name: Create ClusterRole to access the Kubelet API
          shell:
            cmd: kubectl apply -f kube-apiserver-to-kubelet-cluster-role.yaml
            chdir: "{{ WORK_DIR }}"

        - name: Create ClusterRoleBinding manifest
          copy:
            content: |
              apiVersion: rbac.authorization.k8s.io/v1beta1
              kind: ClusterRoleBinding
              metadata:
                name: system:kube-apiserver
                namespace: ""
              roleRef:
                apiGroup: rbac.authorization.k8s.io
                kind: ClusterRole
                name: system:kube-apiserver-to-kubelet
              subjects:
                - apiGroup: rbac.authorization.k8s.io
                  kind: User
                  name: kubernetes
            dest: "{{ WORK_DIR }}/kube-apiserver-cluster-role-binding.yaml"

        - name: Bind the ClusterRole to the kubernetes user
          shell:
            cmd: kubectl apply -f kube-apiserver-cluster-role-binding.yaml
            chdir: "{{ WORK_DIR }}"

    - name: Wait for worker nodes to be discovered and ready
      shell:
        cmd: kubectl get nodes | grep Ready | wc -l
      retries: 20
      delay: 5
      register: result
      until: (groups['workers'] | length) == (result.stdout | int)

    - name: Label worker roles
      shell:
        cmd: kubectl label node {{ item }} kubernetes.io/role=worker
      loop: "{{ groups['workers'] }}"

    - include_tasks: ../tasks/kube-router-install.yaml

    - include_tasks: ../tasks/coredns-install.yaml

