---
- hosts: controllers
  vars:
    tasks_dir: "../tasks"
  tasks:
    - name: Create temp directory
      file:
        name: "{{ WORK_DIR }}"
        state: directory

    - include_tasks: "{{ tasks_dir }}/etcd-install.yaml"

    - name: Create Kubernetes directories
      file:
        name: "{{ item }}"
        state: directory
      loop:
        - /var/lib/kubernetes/
        - /etc/kubernetes/config/
      become: yes

    - name: Copy CA certs to controller
      copy:
        src: "{{ WORK_DIR }}/{{ item }}"
        dest: "/var/lib/kubernetes"
      loop:
        - ca.pem
        - ca-key.pem
      become: yes

    - name: Install kube-apiserver
      block:
        - block:
            - include_tasks: "{{ tasks_dir }}/encryption-generate.yaml"

          run_once: yes

        - include_tasks: "{{ tasks_dir }}/kube-apiserver-install.yaml"

    - name: Install kube-scheduler
      block:
        - name: Prepare files
          block:
            - include_tasks: "{{ tasks_dir }}/pki-generate-cert.yaml"
              vars:
                name: kube-scheduler
                cn: "system:kube-scheduler"
                org: "system:kube-scheduler"

            - include_tasks: "{{ tasks_dir }}/kubeconfig-generate.yaml"
              vars:
                name: kube-scheduler
                kube_cfg_user: "system:kube-scheduler"
          run_once: yes

        - include_tasks: "{{ tasks_dir }}/kube-scheduler-install.yaml"

    - name: Install kube-controller-manager
      block:
        - name: Prepare files
          block:
            - include_tasks: "{{ tasks_dir }}/pki-generate-cert.yaml"
              vars:
                name: "{{ item.name }}"
                cn: "{{ item.cn }}"
                org: "{{ item.org }}"
              loop:
                - {name: kube-controller-manager, cn: "system:kube-controller-manager", org: "system:kube-controller-manager"}
                - {name: service-account, cn: "service-account", org: "Kubernetes"}

            - include_tasks: "{{ tasks_dir }}/kubeconfig-generate.yaml"
              vars:
                name: kube-controller-manager
                kube_cfg_user: "system:kube-controller-manager"
          run_once: yes

        - include_tasks: "{{ tasks_dir }}/kube-controller-manager-install.yaml"
